26/10/2013 (5.5h)
1. Prepare a Latex document with Bibtex references.
2. Investigate which cluster monitoring tools exist and which ones are popular:
    - ganglia
    - nagios
   Describe these tools and mark their differences.
3. Investigate the concept of "Application performance monitoring"
   Identify some techniques how application can be monitored, tie these to ganglia.
   Investigate some scripts that can parse apache httpd log files to calculate the number of requests/second.
4. Summarise the topics I studied in the latex document.
5. Investigate load balancing.
   Identified HAProxy, read about the possibilities.

01/11/2013 (7h)
1. Read more about HAproxy, identified the possible usage scenario's and read the documentation to get an idea how to configure it.
2. Read about storage:
	database replication: master/slave, multi-master, sharding/NoSQL
	disk storage replication: DRBD, hardware RAID-1 
	file-based replication: rsync, unison, journaled file systems
3. Summarise the topics I studied in the latex document.
4. Study "distributed file systems": identify gluster as an interesting technology.
5. Start reading about sharding for MySQL and Postgresql

14/11/2013 (6h)
1. Identify the different solutions to: make incremental database backups, make file system snapshots and to make incremental file system backups
2. Read about RDBMS database sharding, identify that this is possible for MySQL and Postgres. Read how this can be setup for MySQL.
3. Read about NoSQL, read how it can be useful to improve scalability. Identify some interesting solutions (MongoDB, CouchBase).
4. Read about distributed file systems, read about the possibilities, advantages, transparency towards the end user. Read about Ceph, GlusterFS: differences, benchmarks.
5. Install a base version of Ubuntu Server. Read how to configure the network so all cluster nodes can contact each other. 

18/11/2013 (9h)
1. Configure an emulated NAT in VirtualBox, so all cluster nodes can contact each other, without the need to be connected to a real network.
2. Create 3 virtual machines: 'monitor', 'node1', 'node2' by cloning the base virtual machine and configure them (hostname, timezone, â€¦).
3. Install the Nagios server on 'monitor'.
4. Install the NRPE daemon on the nodes ('node1','node2')
5. Test the setup, fix some problems.
6. Configure to do a CPU load test on 'node1', fix some problems.
7. Write a C++ program to test the ratio CPU usage/number of processed transactions.
8. Write a init.d script to start/stop the aforementioned C++ program in a deamonised way.
9. Test the program, do some fixes.

Problems: configuring Nagios to properly do a check_load on the nodes

19/11/2013 (2h)
1. Write out the different steps I did on 18/11 (add screenshots, source code, config file sections).
2. Learn how to add screenshots in Latex and how to reference them.
3. Test the check_load service.
4. Read which threshold values are useful for checking the CPU load.
4. Write a backup script to backup my virtual machine "lab" properly.




